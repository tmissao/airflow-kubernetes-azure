executor: CeleryKubernetesExecutor
fernetKey: ${AIRFLOW_FERNET_KEY}
webserverSecretKey: ${AIRFLOW_WEBSERVER_SECRET_KEY}

images:
  airflow:
    repository: ${AIRFLOW_IMAGE_REPOSITORY}
    tag: ${AIRFLOW_IMAGE_TAG}

config:
  core:
    logging_level: "INFO"
    fab_logging_level: "INFO"
  logging:
    remote_logging: "True"
    remote_log_conn_id: azure-storage
    remote_base_log_folder: 'wasb://${AIRFLOW_LOG_CONTAINER}@${AIRFLOW_LOG_STORAGE_ACCOUNT}.blob.core.windows.net'
  celery:
    flower_url_prefix: ''

env:
  - name: AIRFLOW__CORE__LOAD_EXAMPLES
    value: "False"
  - name: AZURE_TENANT_ID
    value: ${AZURE_TENANT_ID}
  - name: AZURE_CLIENT_ID
    value: ${AZURE_CLIENT_ID}
  - name: AIRFLOW__SECRETS__BACKEND
    value: "airflow.providers.microsoft.azure.secrets.key_vault.AzureKeyVaultBackend"
  - name: AIRFLOW__SECRETS__BACKEND_KWARGS
    value: '{"connections_prefix": "${KEYVAULT_CONNECTIONS_PREFIX}", "variables_prefix": "${KEYVAULT_VARIABLES_PREFIX}", "vault_url": "${AZURE_KEYVAULT_URI}"}'

dags:
  persistence:
    enabled: False
  gitSync:
    enabled: True
    repo: ${AIRFLOW_DAG_GITSYNC_REPO}
    branch: ${AIRFLOW_DAG_GITSYNC_BRANCH}
    subPath: ${AIRFLOW_DAG_GITSYNC_SUBPATH}

ingress:
  web:
    enabled: True
    ingressClassName: nginx

data:
  brokerUrl: rediss://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
  metadataConnection:
    user: ${POSTGRES_USER}
    pass: ${POSTGRES_PASSWORD}
    protocol: postgresql
    host: ${POSTGRES_HOST}
    port: 5432
    db: ${POSTGRES_DATABASE}

postgresql:
  enabled: false

pgbouncer:
  enabled: true
  sslmode: require

redis:
  enabled: false

flower:
  enabled: true

statsd:
  enabled: false

webserver:
  defaultUser:
    username: ${AIRFLOW_DEFAULT_USER_USERNAME}
    password: ${AIRFLOW_DEFAULT_USER_PASSWORD}

logs:
  persistence:
    enabled: false

workers:
  persistence:
    enabled: true

secret:
  - envName: "AZURE_CLIENT_SECRET"
    secretName: "azure-airflow-secrets"
    secretKey: "azure-client-secret"

extraSecrets:
  azure-airflow-secrets:
    data: |
      azure-client-secret: '${AZURE_CLIENT_SECRET}'

createUserJob:
  useHelmHooks: false
  applyCustomEnv: false
migrateDatabaseJob:
  useHelmHooks: false
  applyCustomEnv: false